// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Belt_Array from "bs-platform/lib/es6/belt_Array.js";
import * as Caml_array from "bs-platform/lib/es6/caml_array.js";

function tToJs(param) {
  return param + 0 | 0;
}

function tFromJs(param) {
  if (param <= 2 && 0 <= param) {
    return param - 0 | 0;
  }
  
}

var fonts = [
  "text-sm",
  "text-2xl",
  "text-6xl"
];

function fontSize(font) {
  switch (font) {
    case /* Small */0 :
        return Caml_array.get(fonts, 0);
    case /* Regular */1 :
        return Caml_array.get(fonts, 1);
    case /* Large */2 :
        return Caml_array.get(fonts, 2);
    
  }
}

function setFont(textNode, newFont) {
  Belt_Array.forEach(fonts, (function (font) {
          return textNode.classList.remove(font);
        }));
  return textNode.classList.add(newFont);
}

var FontSelect = {
  tToJs: tToJs,
  tFromJs: tFromJs,
  fonts: fonts,
  fontSize: fontSize,
  setFont: setFont
};

var dom = window.textView;

function setState(state) {
  dom.innerText = state.text;
  return setFont(dom, state.fontSize);
}

var Preview = {
  dom: dom,
  setState: setState
};

var state = {
  text: "",
  fontSize: fontSize(/* Regular */1)
};

var textEditor = window.textEditor;

var radioButtonIds = [
  "selectSmall",
  "selectRegular",
  "selectLarge"
];

function handleTextEdit($$event) {
  state.text = $$event.target.value;
  return setState(state);
}

function getFont(id) {
  if (id === undefined) {
    return /* Regular */1;
  }
  switch (id) {
    case "selectLarge" :
        return /* Large */2;
    case "selectRegular" :
        return /* Regular */1;
    case "selectSmall" :
        return /* Small */0;
    default:
      return /* Regular */1;
  }
}

function handleRadioButton($$event) {
  state.fontSize = fontSize(getFont($$event.target.id));
  return setState(state);
}

function startApp(param) {
  textEditor.addEventListener("input", handleTextEdit);
  return Belt_Array.forEach(radioButtonIds, (function (id) {
                return document.getElementById(id).addEventListener("change", handleRadioButton);
              }));
}

var Editor = {
  state: state,
  textEditor: textEditor,
  radioButtonIds: radioButtonIds,
  handleTextEdit: handleTextEdit,
  getFont: getFont,
  handleRadioButton: handleRadioButton,
  startApp: startApp
};

startApp(undefined);

export {
  FontSelect ,
  Preview ,
  Editor ,
  
}
/* dom Not a pure module */
